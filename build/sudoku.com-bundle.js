!function(e){var t={};function s(o){if(t[o])return t[o].exports;var a=t[o]={i:o,l:!1,exports:{}};return e[o].call(a.exports,a,a.exports,s),a.l=!0,a.exports}s.m=e,s.c=t,s.d=function(e,t,o){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(s.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)s.d(o,a,function(t){return e[t]}.bind(null,a));return o},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=4)}([function(e,t,s){const o=s(1);e.exports=function(e){this.table=e;const t=e=>{let t=0;const s=e=>{const s=(()=>new Set([...Array(9)].map((e,t)=>t+1)))();e.forEach(e=>{const t=e.value;s.has(t)&&s.delete(t)});const o=(e=>{const t={};return[...e].forEach(e=>{t[e]=new Set([])}),t})(s);e.forEach(e=>{if(e.value)return;const t=[...e.possibleValues];t&&t.length&&t.forEach(t=>{o[t]&&o[t].add(e)})});for(const e of Object.keys(o))if(1===o[e].size){const[s]=[...o[e]];s.finalValue||(s.value=e,s.finalValue=!0,t++)}};for(let t=0;t<9;t++){s(e.getRow(t)),s(e.getColumn(t)),s(e.getSquare(t))}return t>0};this.board=new o(this.table),this.solve=()=>new Promise((e,s)=>{const o=setInterval(()=>{try{if(this.board.zerosLeft){if(!t(this.board)){clearInterval(o);const t=[...Array(9)].map((e,t)=>this.board.getRow(t).map(e=>e.possibleValues&&e.possibleValues.size?[...e.possibleValues]:[e.value]));e({possibleValues:t})}}else{clearInterval(o);const t=[...Array(9)].map((e,t)=>this.board.getRow(t).map(e=>e.value));e({solution:t})}}catch(e){clearInterval(o),s(e)}},1)})}},function(e,t,s){const o=s(2);e.exports=class{constructor(e){this._table=e,this._board=[...Array(9)].map((e,t)=>[...Array(9)].map((e,s)=>{return new o(this,t,s,(e,t)=>{e&&!t?this._zerosLeft--:!e&&t&&this._zerosLeft++})})),this.getDefaultCell=this.getDefaultCell.bind(this),this.getRow=this.getRow.bind(this),this.getColumn=this.getColumn.bind(this),this.getSquare=this.getSquare.bind(this),this.countZeros=this.countZeros.bind(this),this._zerosLeft=0,this.countZeros()}get zerosLeft(){return this._zerosLeft}getDefaultCell(e,t){return this._table[e][t]}getRow(e,t=!1){return[...Array(9)].map((s,o)=>t?this._table[e][o]:this._board[e][o])}getColumn(e,t=!1){return[...Array(9)].map((s,o)=>t?this._table[o][e]:this._board[o][e])}getSquare(e,t=!1){const s=Math.floor(e/3),o=Math.floor(e%3);return this.flatSquare(s,o,t)}flatSquareFromCell(e,t,s=!1){void 0===t&&(t=e.columnIndex,e=e.rowIndex);const o=Math.floor(e/3),a=Math.floor(t/3);return this.flatSquare(o,a,s)}flatSquare(e,t,s=!1){const o=[0,3,6],a=[2,5,8],l=[];for(let r=o[e];r<=a[e];r++)for(let e=o[t];e<=a[t];e++)s?l.push(this._table[r][e]):l.push(this._board[r][e]);return l}countZeros(){this._zerosLeft=0;for(let e=0;e<9;e++)for(let t=0;t<9;t++)this._board[e][t].value||this._zerosLeft++}}},function(e,t){e.exports=class{constructor(e,t,s,o){this.rowIndex=t,this.columnIndex=s,this._board=e,this._value=e.getDefaultCell(t,s),this._possibleValues=this.calculatePossibleValues(),this._onCellUpdated=o||(()=>{}),this.isDefault=this._value>0,this.finalValue=this._value>0,this.updatePossibleValues=this.updatePossibleValues.bind(this)}get value(){return parseInt(this._value)}set value(e){if(!this.finalValue){const t=this._value;this._value=parseInt(e),this._onCellUpdated(e,t),this.updatePossibleValues()}}get possibleValues(){return this._possibleValues}updatePossibleValues(e){e?this._possibleValues&&(this._possibleValues.delete(e),this._value||1!==this._possibleValues.size||(this.value=[...this._possibleValues][0],this.finalValue=!0)):(this._possibleValues.delete(this.value),this._board.getColumn(this.columnIndex).forEach(e=>e.updatePossibleValues(this.value)),this._board.getRow(this.rowIndex).forEach(e=>e.updatePossibleValues(this.value)),this._board.flatSquareFromCell(this.rowIndex,this.columnIndex).forEach(e=>e.updatePossibleValues(this.value)))}calculatePossibleValues(){if(!this._value){const e=new Set([...Array(9)].map((e,t)=>t+1)),t=t=>t.forEach(t=>{e.has(t)&&e.delete(t)});return t([this._value]),t(this._board.getRow(this.rowIndex,!0)),t(this._board.getColumn(this.columnIndex,!0)),t(this._board.flatSquareFromCell(this.rowIndex,this.columnIndex,!0)),e}}}},,function(e,t,s){const o=s(0),a=$("<button>Solve</button>");a.css("float","right"),a.click(()=>{const e=gameScene.cellsGroup.children.entries.map(e=>e.dataValue._text).map(e=>parseInt(e||0)).map((e,t,s)=>s.slice(9*t,9*(t+1)));new o(e).solve().then(({possibleValues:e,solution:t})=>{let s=0,o=!1;const a=setInterval(async()=>{if(!o){if(gameScene.setActiveCell(s),!e){const e=t[Math.floor(s/9)][Math.floor(s%9)];await(async e=>{o=!0,await new Promise(t=>{e(),setTimeout(()=>t(),1)}),o=!1})(()=>$.event.trigger({type:"keydown",which:e.toString().charCodeAt(0)}))}++s>=81&&clearInterval(a)}},1)})}),a.prependTo($("#masthead .new-game-button-wrapper").get(0))}]);